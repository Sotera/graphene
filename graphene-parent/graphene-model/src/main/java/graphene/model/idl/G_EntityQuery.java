/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package graphene.model.idl;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class G_EntityQuery extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"G_EntityQuery\",\"namespace\":\"graphene.model.idl\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"targetSchema\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"firstResult\",\"type\":\"long\",\"default\":0},{\"name\":\"maxResult\",\"type\":\"long\",\"default\":0},{\"name\":\"userId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"None\"},{\"name\":\"username\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"None\"},{\"name\":\"timeInitiated\",\"type\":\"long\"},{\"name\":\"propertyMatchDescriptors\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"G_PropertyMatchDescriptor\",\"doc\":\"A PropertyDescriptor is used to describe a possible property that can be present in an entity or link. It describes \\n\\t a single property that can be used in a property search. It can optionally include example or suggested values \\n\\t for searching on.\\n\\t \\n\\t CHANGED IN 1.8\",\"fields\":[{\"name\":\"key\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"field name or G_PropertyTag (or G_PathMatchTag) that could be searched on\"},{\"name\":\"singletonRange\",\"type\":{\"type\":\"record\",\"name\":\"G_SingletonRange\",\"doc\":\"Single value\\n\\t\\n\\tADDED IN 1.5\",\"fields\":[{\"name\":\"value\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"int\",\"float\",\"double\",\"long\",\"boolean\",{\"type\":\"record\",\"name\":\"G_GeoData\",\"doc\":\"Structured representation of geo-spatial data.\",\"fields\":[{\"name\":\"text\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"an address or other place reference; unstructured text field\",\"default\":null},{\"name\":\"lat\",\"type\":[\"double\",\"null\"],\"doc\":\"latitude\",\"default\":null},{\"name\":\"lon\",\"type\":[\"double\",\"null\"],\"doc\":\"longitude\",\"default\":null},{\"name\":\"cc\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"ISO 3 digit country code\",\"default\":null}]}]},{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"G_PropertyType\",\"doc\":\"Allowed types for Property values.\\n\\n\\t CHANGED in 1.5\",\"symbols\":[\"DOUBLE\",\"LONG\",\"BOOLEAN\",\"STRING\",\"DATE\",\"GEO\",\"OTHER\"]},\"doc\":\"One of DOUBLE, LONG, BOOLEAN, STRING, DATE, GEO, OTHER\"}]},\"doc\":\"value of the Property to search on\",\"default\":null},{\"name\":\"listRange\",\"type\":{\"type\":\"record\",\"name\":\"G_ListRange\",\"doc\":\"List of values\\n\\t\\n\\tADDED IN 1.5\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"int\",\"float\",\"double\",\"long\",\"boolean\",\"G_GeoData\"]}},{\"name\":\"type\",\"type\":\"G_PropertyType\",\"doc\":\"One of DOUBLE, LONG, BOOLEAN, STRING, DATE, GEO, OTHER\"}]},\"default\":null},{\"name\":\"boundedRange\",\"type\":{\"type\":\"record\",\"name\":\"G_BoundedRange\",\"doc\":\"Bounded or unbounded range values\\n\\t\\n\\tADDED IN 1.5\",\"fields\":[{\"name\":\"start\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"int\",\"float\",\"double\",\"long\",\"boolean\",\"G_GeoData\",\"null\"],\"doc\":\"start of range, or null if unbounded start\"},{\"name\":\"end\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"int\",\"float\",\"double\",\"long\",\"boolean\",\"G_GeoData\",\"null\"],\"doc\":\"end of range, or null if unbounded start\"},{\"name\":\"inclusive\",\"type\":\"boolean\",\"doc\":\"If true, range includes specified endpoint. If false, range is exclusive.\"},{\"name\":\"type\",\"type\":\"G_PropertyType\",\"doc\":\"One of DOUBLE, LONG, BOOLEAN, STRING, DATE, GEO, OTHER\"}]},\"default\":null},{\"name\":\"variable\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"doc\":\"If not null/empty, the value is relative to a logical variable specified here (e.g. \\\"X\\\")\\n\\t\\t *  Other parameters using the same logical variable name are relative to this value.\\n\\t\\t *  For instance, for a {key=\\\"amount\\\", value=\\\"0.98\\\", variable=\\\"A\\\"} means that the value\\n\\t\\t *  of amount is 0.98A.  Another amount might be 0.55A, and the property match engine\\n\\t\\t *  (e.g. search engine, database query or pattern match algorithm) should understand\\n\\t\\t *  the relative values.\\n\\t\\t *  \\n\\t\\t *  If no variable is specified, then the value is an absolute number. For example,\\n\\t\\t *  {key=\\\"amount\\\", value=\\\"0.98\\\"} refers to an amount of exactly 0.98.\",\"default\":\"\"},{\"name\":\"weight\",\"type\":[\"float\",\"null\"],\"doc\":\"Relative importance of this match criteria, where the default is 1.0.\",\"default\":1.0},{\"name\":\"similarity\",\"type\":[\"float\",\"null\"],\"doc\":\"Require similarity for fuzzy searches, the default is null.\",\"default\":1.0},{\"name\":\"include\",\"type\":\"boolean\",\"doc\":\"If true, INCLUDE all values matching this descriptor. If false, EXCLUDE all values matching this descriptor.\",\"default\":true},{\"name\":\"constraint\",\"type\":[{\"type\":\"enum\",\"name\":\"G_Constraint\",\"doc\":\"Property value matching constraints\\n\\n\\t ADDED IN 1.8\",\"symbols\":[\"EQUALS\",\"NOT\",\"OPTIONAL_EQUALS\",\"FUZZY_REQUIRED\",\"LIKE\",\"CONTAINS\",\"ENDS_WITH\",\"REGEX\",\"STARTS_WITH\",\"BETWEEN\",\"FUZZY_PARTIAL_OPTIONAL\"]},\"null\"],\"doc\":\"MUST_EQUALS, FUZZY_PARTIAL_OPTIONAL, MUST_NOT\"},{\"name\":\"typeMappings\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"G_TypeMapping\",\"doc\":\"Used to describe how an G_PropertyDescriptor maps to given a type.\\n\\n\\t\\tADDED IN 1.8\\n\\t *\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The type that the mapping applies to *\"},{\"name\":\"memberKey\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"field that the G_Property maps to in the type *\"}]}},\"doc\":\"List of type mappings to match in *\",\"default\":null}]}}],\"default\":null},{\"name\":\"caseSensitive\",\"type\":\"boolean\",\"default\":false},{\"name\":\"searchFreeText\",\"type\":\"boolean\",\"default\":false},{\"name\":\"minimumScore\",\"type\":\"double\",\"default\":0.25},{\"name\":\"initiatorId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   private java.lang.String id;
   private java.lang.String targetSchema;
   private long firstResult;
   private long maxResult;
   private java.lang.String userId;
   private java.lang.String username;
   private long timeInitiated;
   private java.util.List<graphene.model.idl.G_PropertyMatchDescriptor> propertyMatchDescriptors;
   private boolean caseSensitive;
   private boolean searchFreeText;
   private double minimumScore;
   private java.lang.String initiatorId;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public G_EntityQuery() {}

  /**
   * All-args constructor.
   */
  public G_EntityQuery(java.lang.String id, java.lang.String targetSchema, java.lang.Long firstResult, java.lang.Long maxResult, java.lang.String userId, java.lang.String username, java.lang.Long timeInitiated, java.util.List<graphene.model.idl.G_PropertyMatchDescriptor> propertyMatchDescriptors, java.lang.Boolean caseSensitive, java.lang.Boolean searchFreeText, java.lang.Double minimumScore, java.lang.String initiatorId) {
    this.id = id;
    this.targetSchema = targetSchema;
    this.firstResult = firstResult;
    this.maxResult = maxResult;
    this.userId = userId;
    this.username = username;
    this.timeInitiated = timeInitiated;
    this.propertyMatchDescriptors = propertyMatchDescriptors;
    this.caseSensitive = caseSensitive;
    this.searchFreeText = searchFreeText;
    this.minimumScore = minimumScore;
    this.initiatorId = initiatorId;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return targetSchema;
    case 2: return firstResult;
    case 3: return maxResult;
    case 4: return userId;
    case 5: return username;
    case 6: return timeInitiated;
    case 7: return propertyMatchDescriptors;
    case 8: return caseSensitive;
    case 9: return searchFreeText;
    case 10: return minimumScore;
    case 11: return initiatorId;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.String)value$; break;
    case 1: targetSchema = (java.lang.String)value$; break;
    case 2: firstResult = (java.lang.Long)value$; break;
    case 3: maxResult = (java.lang.Long)value$; break;
    case 4: userId = (java.lang.String)value$; break;
    case 5: username = (java.lang.String)value$; break;
    case 6: timeInitiated = (java.lang.Long)value$; break;
    case 7: propertyMatchDescriptors = (java.util.List<graphene.model.idl.G_PropertyMatchDescriptor>)value$; break;
    case 8: caseSensitive = (java.lang.Boolean)value$; break;
    case 9: searchFreeText = (java.lang.Boolean)value$; break;
    case 10: minimumScore = (java.lang.Double)value$; break;
    case 11: initiatorId = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.String value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'targetSchema' field.
   */
  public java.lang.String getTargetSchema() {
    return targetSchema;
  }

  /**
   * Sets the value of the 'targetSchema' field.
   * @param value the value to set.
   */
  public void setTargetSchema(java.lang.String value) {
    this.targetSchema = value;
  }

  /**
   * Gets the value of the 'firstResult' field.
   */
  public java.lang.Long getFirstResult() {
    return firstResult;
  }

  /**
   * Sets the value of the 'firstResult' field.
   * @param value the value to set.
   */
  public void setFirstResult(java.lang.Long value) {
    this.firstResult = value;
  }

  /**
   * Gets the value of the 'maxResult' field.
   */
  public java.lang.Long getMaxResult() {
    return maxResult;
  }

  /**
   * Sets the value of the 'maxResult' field.
   * @param value the value to set.
   */
  public void setMaxResult(java.lang.Long value) {
    this.maxResult = value;
  }

  /**
   * Gets the value of the 'userId' field.
   */
  public java.lang.String getUserId() {
    return userId;
  }

  /**
   * Sets the value of the 'userId' field.
   * @param value the value to set.
   */
  public void setUserId(java.lang.String value) {
    this.userId = value;
  }

  /**
   * Gets the value of the 'username' field.
   */
  public java.lang.String getUsername() {
    return username;
  }

  /**
   * Sets the value of the 'username' field.
   * @param value the value to set.
   */
  public void setUsername(java.lang.String value) {
    this.username = value;
  }

  /**
   * Gets the value of the 'timeInitiated' field.
   */
  public java.lang.Long getTimeInitiated() {
    return timeInitiated;
  }

  /**
   * Sets the value of the 'timeInitiated' field.
   * @param value the value to set.
   */
  public void setTimeInitiated(java.lang.Long value) {
    this.timeInitiated = value;
  }

  /**
   * Gets the value of the 'propertyMatchDescriptors' field.
   */
  public java.util.List<graphene.model.idl.G_PropertyMatchDescriptor> getPropertyMatchDescriptors() {
    return propertyMatchDescriptors;
  }

  /**
   * Sets the value of the 'propertyMatchDescriptors' field.
   * @param value the value to set.
   */
  public void setPropertyMatchDescriptors(java.util.List<graphene.model.idl.G_PropertyMatchDescriptor> value) {
    this.propertyMatchDescriptors = value;
  }

  /**
   * Gets the value of the 'caseSensitive' field.
   */
  public java.lang.Boolean getCaseSensitive() {
    return caseSensitive;
  }

  /**
   * Sets the value of the 'caseSensitive' field.
   * @param value the value to set.
   */
  public void setCaseSensitive(java.lang.Boolean value) {
    this.caseSensitive = value;
  }

  /**
   * Gets the value of the 'searchFreeText' field.
   */
  public java.lang.Boolean getSearchFreeText() {
    return searchFreeText;
  }

  /**
   * Sets the value of the 'searchFreeText' field.
   * @param value the value to set.
   */
  public void setSearchFreeText(java.lang.Boolean value) {
    this.searchFreeText = value;
  }

  /**
   * Gets the value of the 'minimumScore' field.
   */
  public java.lang.Double getMinimumScore() {
    return minimumScore;
  }

  /**
   * Sets the value of the 'minimumScore' field.
   * @param value the value to set.
   */
  public void setMinimumScore(java.lang.Double value) {
    this.minimumScore = value;
  }

  /**
   * Gets the value of the 'initiatorId' field.
   */
  public java.lang.String getInitiatorId() {
    return initiatorId;
  }

  /**
   * Sets the value of the 'initiatorId' field.
   * @param value the value to set.
   */
  public void setInitiatorId(java.lang.String value) {
    this.initiatorId = value;
  }

  /** Creates a new G_EntityQuery RecordBuilder */
  public static graphene.model.idl.G_EntityQuery.Builder newBuilder() {
    return new graphene.model.idl.G_EntityQuery.Builder();
  }
  
  /** Creates a new G_EntityQuery RecordBuilder by copying an existing Builder */
  public static graphene.model.idl.G_EntityQuery.Builder newBuilder(graphene.model.idl.G_EntityQuery.Builder other) {
    return new graphene.model.idl.G_EntityQuery.Builder(other);
  }
  
  /** Creates a new G_EntityQuery RecordBuilder by copying an existing G_EntityQuery instance */
  public static graphene.model.idl.G_EntityQuery.Builder newBuilder(graphene.model.idl.G_EntityQuery other) {
    return new graphene.model.idl.G_EntityQuery.Builder(other);
  }
  
  /**
   * RecordBuilder for G_EntityQuery instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<G_EntityQuery>
    implements org.apache.avro.data.RecordBuilder<G_EntityQuery> {

    private java.lang.String id;
    private java.lang.String targetSchema;
    private long firstResult;
    private long maxResult;
    private java.lang.String userId;
    private java.lang.String username;
    private long timeInitiated;
    private java.util.List<graphene.model.idl.G_PropertyMatchDescriptor> propertyMatchDescriptors;
    private boolean caseSensitive;
    private boolean searchFreeText;
    private double minimumScore;
    private java.lang.String initiatorId;

    /** Creates a new Builder */
    private Builder() {
      super(graphene.model.idl.G_EntityQuery.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(graphene.model.idl.G_EntityQuery.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.targetSchema)) {
        this.targetSchema = data().deepCopy(fields()[1].schema(), other.targetSchema);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.firstResult)) {
        this.firstResult = data().deepCopy(fields()[2].schema(), other.firstResult);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.maxResult)) {
        this.maxResult = data().deepCopy(fields()[3].schema(), other.maxResult);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.userId)) {
        this.userId = data().deepCopy(fields()[4].schema(), other.userId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.username)) {
        this.username = data().deepCopy(fields()[5].schema(), other.username);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.timeInitiated)) {
        this.timeInitiated = data().deepCopy(fields()[6].schema(), other.timeInitiated);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.propertyMatchDescriptors)) {
        this.propertyMatchDescriptors = data().deepCopy(fields()[7].schema(), other.propertyMatchDescriptors);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.caseSensitive)) {
        this.caseSensitive = data().deepCopy(fields()[8].schema(), other.caseSensitive);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.searchFreeText)) {
        this.searchFreeText = data().deepCopy(fields()[9].schema(), other.searchFreeText);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.minimumScore)) {
        this.minimumScore = data().deepCopy(fields()[10].schema(), other.minimumScore);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.initiatorId)) {
        this.initiatorId = data().deepCopy(fields()[11].schema(), other.initiatorId);
        fieldSetFlags()[11] = true;
      }
    }
    
    /** Creates a Builder by copying an existing G_EntityQuery instance */
    private Builder(graphene.model.idl.G_EntityQuery other) {
            super(graphene.model.idl.G_EntityQuery.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.targetSchema)) {
        this.targetSchema = data().deepCopy(fields()[1].schema(), other.targetSchema);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.firstResult)) {
        this.firstResult = data().deepCopy(fields()[2].schema(), other.firstResult);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.maxResult)) {
        this.maxResult = data().deepCopy(fields()[3].schema(), other.maxResult);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.userId)) {
        this.userId = data().deepCopy(fields()[4].schema(), other.userId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.username)) {
        this.username = data().deepCopy(fields()[5].schema(), other.username);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.timeInitiated)) {
        this.timeInitiated = data().deepCopy(fields()[6].schema(), other.timeInitiated);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.propertyMatchDescriptors)) {
        this.propertyMatchDescriptors = data().deepCopy(fields()[7].schema(), other.propertyMatchDescriptors);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.caseSensitive)) {
        this.caseSensitive = data().deepCopy(fields()[8].schema(), other.caseSensitive);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.searchFreeText)) {
        this.searchFreeText = data().deepCopy(fields()[9].schema(), other.searchFreeText);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.minimumScore)) {
        this.minimumScore = data().deepCopy(fields()[10].schema(), other.minimumScore);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.initiatorId)) {
        this.initiatorId = data().deepCopy(fields()[11].schema(), other.initiatorId);
        fieldSetFlags()[11] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public java.lang.String getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public graphene.model.idl.G_EntityQuery.Builder setId(java.lang.String value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public graphene.model.idl.G_EntityQuery.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'targetSchema' field */
    public java.lang.String getTargetSchema() {
      return targetSchema;
    }
    
    /** Sets the value of the 'targetSchema' field */
    public graphene.model.idl.G_EntityQuery.Builder setTargetSchema(java.lang.String value) {
      validate(fields()[1], value);
      this.targetSchema = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'targetSchema' field has been set */
    public boolean hasTargetSchema() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'targetSchema' field */
    public graphene.model.idl.G_EntityQuery.Builder clearTargetSchema() {
      targetSchema = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'firstResult' field */
    public java.lang.Long getFirstResult() {
      return firstResult;
    }
    
    /** Sets the value of the 'firstResult' field */
    public graphene.model.idl.G_EntityQuery.Builder setFirstResult(long value) {
      validate(fields()[2], value);
      this.firstResult = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'firstResult' field has been set */
    public boolean hasFirstResult() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'firstResult' field */
    public graphene.model.idl.G_EntityQuery.Builder clearFirstResult() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'maxResult' field */
    public java.lang.Long getMaxResult() {
      return maxResult;
    }
    
    /** Sets the value of the 'maxResult' field */
    public graphene.model.idl.G_EntityQuery.Builder setMaxResult(long value) {
      validate(fields()[3], value);
      this.maxResult = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'maxResult' field has been set */
    public boolean hasMaxResult() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'maxResult' field */
    public graphene.model.idl.G_EntityQuery.Builder clearMaxResult() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'userId' field */
    public java.lang.String getUserId() {
      return userId;
    }
    
    /** Sets the value of the 'userId' field */
    public graphene.model.idl.G_EntityQuery.Builder setUserId(java.lang.String value) {
      validate(fields()[4], value);
      this.userId = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'userId' field has been set */
    public boolean hasUserId() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'userId' field */
    public graphene.model.idl.G_EntityQuery.Builder clearUserId() {
      userId = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'username' field */
    public java.lang.String getUsername() {
      return username;
    }
    
    /** Sets the value of the 'username' field */
    public graphene.model.idl.G_EntityQuery.Builder setUsername(java.lang.String value) {
      validate(fields()[5], value);
      this.username = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'username' field has been set */
    public boolean hasUsername() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'username' field */
    public graphene.model.idl.G_EntityQuery.Builder clearUsername() {
      username = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'timeInitiated' field */
    public java.lang.Long getTimeInitiated() {
      return timeInitiated;
    }
    
    /** Sets the value of the 'timeInitiated' field */
    public graphene.model.idl.G_EntityQuery.Builder setTimeInitiated(long value) {
      validate(fields()[6], value);
      this.timeInitiated = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'timeInitiated' field has been set */
    public boolean hasTimeInitiated() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'timeInitiated' field */
    public graphene.model.idl.G_EntityQuery.Builder clearTimeInitiated() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'propertyMatchDescriptors' field */
    public java.util.List<graphene.model.idl.G_PropertyMatchDescriptor> getPropertyMatchDescriptors() {
      return propertyMatchDescriptors;
    }
    
    /** Sets the value of the 'propertyMatchDescriptors' field */
    public graphene.model.idl.G_EntityQuery.Builder setPropertyMatchDescriptors(java.util.List<graphene.model.idl.G_PropertyMatchDescriptor> value) {
      validate(fields()[7], value);
      this.propertyMatchDescriptors = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'propertyMatchDescriptors' field has been set */
    public boolean hasPropertyMatchDescriptors() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'propertyMatchDescriptors' field */
    public graphene.model.idl.G_EntityQuery.Builder clearPropertyMatchDescriptors() {
      propertyMatchDescriptors = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'caseSensitive' field */
    public java.lang.Boolean getCaseSensitive() {
      return caseSensitive;
    }
    
    /** Sets the value of the 'caseSensitive' field */
    public graphene.model.idl.G_EntityQuery.Builder setCaseSensitive(boolean value) {
      validate(fields()[8], value);
      this.caseSensitive = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'caseSensitive' field has been set */
    public boolean hasCaseSensitive() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'caseSensitive' field */
    public graphene.model.idl.G_EntityQuery.Builder clearCaseSensitive() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'searchFreeText' field */
    public java.lang.Boolean getSearchFreeText() {
      return searchFreeText;
    }
    
    /** Sets the value of the 'searchFreeText' field */
    public graphene.model.idl.G_EntityQuery.Builder setSearchFreeText(boolean value) {
      validate(fields()[9], value);
      this.searchFreeText = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'searchFreeText' field has been set */
    public boolean hasSearchFreeText() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'searchFreeText' field */
    public graphene.model.idl.G_EntityQuery.Builder clearSearchFreeText() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'minimumScore' field */
    public java.lang.Double getMinimumScore() {
      return minimumScore;
    }
    
    /** Sets the value of the 'minimumScore' field */
    public graphene.model.idl.G_EntityQuery.Builder setMinimumScore(double value) {
      validate(fields()[10], value);
      this.minimumScore = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'minimumScore' field has been set */
    public boolean hasMinimumScore() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'minimumScore' field */
    public graphene.model.idl.G_EntityQuery.Builder clearMinimumScore() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'initiatorId' field */
    public java.lang.String getInitiatorId() {
      return initiatorId;
    }
    
    /** Sets the value of the 'initiatorId' field */
    public graphene.model.idl.G_EntityQuery.Builder setInitiatorId(java.lang.String value) {
      validate(fields()[11], value);
      this.initiatorId = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'initiatorId' field has been set */
    public boolean hasInitiatorId() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'initiatorId' field */
    public graphene.model.idl.G_EntityQuery.Builder clearInitiatorId() {
      initiatorId = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    @Override
    public G_EntityQuery build() {
      try {
        G_EntityQuery record = new G_EntityQuery();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.String) defaultValue(fields()[0]);
        record.targetSchema = fieldSetFlags()[1] ? this.targetSchema : (java.lang.String) defaultValue(fields()[1]);
        record.firstResult = fieldSetFlags()[2] ? this.firstResult : (java.lang.Long) defaultValue(fields()[2]);
        record.maxResult = fieldSetFlags()[3] ? this.maxResult : (java.lang.Long) defaultValue(fields()[3]);
        record.userId = fieldSetFlags()[4] ? this.userId : (java.lang.String) defaultValue(fields()[4]);
        record.username = fieldSetFlags()[5] ? this.username : (java.lang.String) defaultValue(fields()[5]);
        record.timeInitiated = fieldSetFlags()[6] ? this.timeInitiated : (java.lang.Long) defaultValue(fields()[6]);
        record.propertyMatchDescriptors = fieldSetFlags()[7] ? this.propertyMatchDescriptors : (java.util.List<graphene.model.idl.G_PropertyMatchDescriptor>) defaultValue(fields()[7]);
        record.caseSensitive = fieldSetFlags()[8] ? this.caseSensitive : (java.lang.Boolean) defaultValue(fields()[8]);
        record.searchFreeText = fieldSetFlags()[9] ? this.searchFreeText : (java.lang.Boolean) defaultValue(fields()[9]);
        record.minimumScore = fieldSetFlags()[10] ? this.minimumScore : (java.lang.Double) defaultValue(fields()[10]);
        record.initiatorId = fieldSetFlags()[11] ? this.initiatorId : (java.lang.String) defaultValue(fields()[11]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
