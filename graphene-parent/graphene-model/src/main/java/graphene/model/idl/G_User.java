/*
 *
 *  Licensed to the Apache Software Foundation (ASF) under one
 *  or more contributor license agreements.  See the NOTICE file
 *  distributed with this work for additional information
 *  regarding copyright ownership.  The ASF licenses this file
 *  to you under the Apache License, Version 2.0 (the
 *  "License"); you may not use this file except in compliance
 *  with the License.  You may obtain a copy of the License at
 *       http://www.apache.org/licenses/LICENSE-2.0
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */

/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package graphene.model.idl;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class G_User extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"G_User\",\"namespace\":\"graphene.model.idl\",\"fields\":[{\"name\":\"active\",\"type\":\"boolean\",\"doc\":\"\",\"default\":true},{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"username\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"notset\"},{\"name\":\"avatar\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"doc\":\"* some id of an avatar (could be a file name or other string to look\\n\\t\\t * up)\",\"default\":null},{\"name\":\"email\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"doc\":\"user's email\",\"default\":null},{\"name\":\"fullname\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"doc\":\"user's full name\",\"default\":null},{\"name\":\"hashedpassword\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"doc\":\"user's hashed password\",\"default\":null},{\"name\":\"lastlogin\",\"type\":[\"long\",\"null\"],\"doc\":\"user's lastlogin datetime\",\"default\":0},{\"name\":\"modified\",\"type\":[\"long\",\"null\"],\"doc\":\"user's modified datetime\",\"default\":0},{\"name\":\"created\",\"type\":[\"long\",\"null\"],\"doc\":\"user's account created datetime\",\"default\":0},{\"name\":\"numberlogins\",\"type\":\"int\",\"doc\":\"user's numberlogins\",\"default\":0},{\"name\":\"uimode\",\"type\":{\"type\":\"enum\",\"name\":\"G_UserInterfaceMode\",\"symbols\":[\"DOMAIN_EXPERT\",\"TECHNICAL_EXPERT\"]},\"doc\":\"user's last selected uimode\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /**  */
   private boolean active;
   private java.lang.String id;
   private java.lang.String username;
  /** * some id of an avatar (could be a file name or other string to look
		 * up) */
   private java.lang.String avatar;
  /** user's email */
   private java.lang.String email;
  /** user's full name */
   private java.lang.String fullname;
  /** user's hashed password */
   private java.lang.String hashedpassword;
  /** user's lastlogin datetime */
   private java.lang.Long lastlogin;
  /** user's modified datetime */
   private java.lang.Long modified;
  /** user's account created datetime */
   private java.lang.Long created;
  /** user's numberlogins */
   private int numberlogins;
  /** user's last selected uimode */
   private graphene.model.idl.G_UserInterfaceMode uimode;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public G_User() {}

  /**
   * All-args constructor.
   */
  public G_User(java.lang.Boolean active, java.lang.String id, java.lang.String username, java.lang.String avatar, java.lang.String email, java.lang.String fullname, java.lang.String hashedpassword, java.lang.Long lastlogin, java.lang.Long modified, java.lang.Long created, java.lang.Integer numberlogins, graphene.model.idl.G_UserInterfaceMode uimode) {
    this.active = active;
    this.id = id;
    this.username = username;
    this.avatar = avatar;
    this.email = email;
    this.fullname = fullname;
    this.hashedpassword = hashedpassword;
    this.lastlogin = lastlogin;
    this.modified = modified;
    this.created = created;
    this.numberlogins = numberlogins;
    this.uimode = uimode;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return active;
    case 1: return id;
    case 2: return username;
    case 3: return avatar;
    case 4: return email;
    case 5: return fullname;
    case 6: return hashedpassword;
    case 7: return lastlogin;
    case 8: return modified;
    case 9: return created;
    case 10: return numberlogins;
    case 11: return uimode;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: active = (java.lang.Boolean)value$; break;
    case 1: id = (java.lang.String)value$; break;
    case 2: username = (java.lang.String)value$; break;
    case 3: avatar = (java.lang.String)value$; break;
    case 4: email = (java.lang.String)value$; break;
    case 5: fullname = (java.lang.String)value$; break;
    case 6: hashedpassword = (java.lang.String)value$; break;
    case 7: lastlogin = (java.lang.Long)value$; break;
    case 8: modified = (java.lang.Long)value$; break;
    case 9: created = (java.lang.Long)value$; break;
    case 10: numberlogins = (java.lang.Integer)value$; break;
    case 11: uimode = (graphene.model.idl.G_UserInterfaceMode)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'active' field.
   *    */
  public java.lang.Boolean getActive() {
    return active;
  }

  /**
   * Sets the value of the 'active' field.
   *    * @param value the value to set.
   */
  public void setActive(java.lang.Boolean value) {
    this.active = value;
  }

  /**
   * Gets the value of the 'id' field.
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.String value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'username' field.
   */
  public java.lang.String getUsername() {
    return username;
  }

  /**
   * Sets the value of the 'username' field.
   * @param value the value to set.
   */
  public void setUsername(java.lang.String value) {
    this.username = value;
  }

  /**
   * Gets the value of the 'avatar' field.
   * * some id of an avatar (could be a file name or other string to look
		 * up)   */
  public java.lang.String getAvatar() {
    return avatar;
  }

  /**
   * Sets the value of the 'avatar' field.
   * * some id of an avatar (could be a file name or other string to look
		 * up)   * @param value the value to set.
   */
  public void setAvatar(java.lang.String value) {
    this.avatar = value;
  }

  /**
   * Gets the value of the 'email' field.
   * user's email   */
  public java.lang.String getEmail() {
    return email;
  }

  /**
   * Sets the value of the 'email' field.
   * user's email   * @param value the value to set.
   */
  public void setEmail(java.lang.String value) {
    this.email = value;
  }

  /**
   * Gets the value of the 'fullname' field.
   * user's full name   */
  public java.lang.String getFullname() {
    return fullname;
  }

  /**
   * Sets the value of the 'fullname' field.
   * user's full name   * @param value the value to set.
   */
  public void setFullname(java.lang.String value) {
    this.fullname = value;
  }

  /**
   * Gets the value of the 'hashedpassword' field.
   * user's hashed password   */
  public java.lang.String getHashedpassword() {
    return hashedpassword;
  }

  /**
   * Sets the value of the 'hashedpassword' field.
   * user's hashed password   * @param value the value to set.
   */
  public void setHashedpassword(java.lang.String value) {
    this.hashedpassword = value;
  }

  /**
   * Gets the value of the 'lastlogin' field.
   * user's lastlogin datetime   */
  public java.lang.Long getLastlogin() {
    return lastlogin;
  }

  /**
   * Sets the value of the 'lastlogin' field.
   * user's lastlogin datetime   * @param value the value to set.
   */
  public void setLastlogin(java.lang.Long value) {
    this.lastlogin = value;
  }

  /**
   * Gets the value of the 'modified' field.
   * user's modified datetime   */
  public java.lang.Long getModified() {
    return modified;
  }

  /**
   * Sets the value of the 'modified' field.
   * user's modified datetime   * @param value the value to set.
   */
  public void setModified(java.lang.Long value) {
    this.modified = value;
  }

  /**
   * Gets the value of the 'created' field.
   * user's account created datetime   */
  public java.lang.Long getCreated() {
    return created;
  }

  /**
   * Sets the value of the 'created' field.
   * user's account created datetime   * @param value the value to set.
   */
  public void setCreated(java.lang.Long value) {
    this.created = value;
  }

  /**
   * Gets the value of the 'numberlogins' field.
   * user's numberlogins   */
  public java.lang.Integer getNumberlogins() {
    return numberlogins;
  }

  /**
   * Sets the value of the 'numberlogins' field.
   * user's numberlogins   * @param value the value to set.
   */
  public void setNumberlogins(java.lang.Integer value) {
    this.numberlogins = value;
  }

  /**
   * Gets the value of the 'uimode' field.
   * user's last selected uimode   */
  public graphene.model.idl.G_UserInterfaceMode getUimode() {
    return uimode;
  }

  /**
   * Sets the value of the 'uimode' field.
   * user's last selected uimode   * @param value the value to set.
   */
  public void setUimode(graphene.model.idl.G_UserInterfaceMode value) {
    this.uimode = value;
  }

  /** Creates a new G_User RecordBuilder */
  public static graphene.model.idl.G_User.Builder newBuilder() {
    return new graphene.model.idl.G_User.Builder();
  }
  
  /** Creates a new G_User RecordBuilder by copying an existing Builder */
  public static graphene.model.idl.G_User.Builder newBuilder(graphene.model.idl.G_User.Builder other) {
    return new graphene.model.idl.G_User.Builder(other);
  }
  
  /** Creates a new G_User RecordBuilder by copying an existing G_User instance */
  public static graphene.model.idl.G_User.Builder newBuilder(graphene.model.idl.G_User other) {
    return new graphene.model.idl.G_User.Builder(other);
  }
  
  /**
   * RecordBuilder for G_User instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<G_User>
    implements org.apache.avro.data.RecordBuilder<G_User> {

    private boolean active;
    private java.lang.String id;
    private java.lang.String username;
    private java.lang.String avatar;
    private java.lang.String email;
    private java.lang.String fullname;
    private java.lang.String hashedpassword;
    private java.lang.Long lastlogin;
    private java.lang.Long modified;
    private java.lang.Long created;
    private int numberlogins;
    private graphene.model.idl.G_UserInterfaceMode uimode;

    /** Creates a new Builder */
    private Builder() {
      super(graphene.model.idl.G_User.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(graphene.model.idl.G_User.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.active)) {
        this.active = data().deepCopy(fields()[0].schema(), other.active);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.username)) {
        this.username = data().deepCopy(fields()[2].schema(), other.username);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.avatar)) {
        this.avatar = data().deepCopy(fields()[3].schema(), other.avatar);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.email)) {
        this.email = data().deepCopy(fields()[4].schema(), other.email);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.fullname)) {
        this.fullname = data().deepCopy(fields()[5].schema(), other.fullname);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.hashedpassword)) {
        this.hashedpassword = data().deepCopy(fields()[6].schema(), other.hashedpassword);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.lastlogin)) {
        this.lastlogin = data().deepCopy(fields()[7].schema(), other.lastlogin);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.modified)) {
        this.modified = data().deepCopy(fields()[8].schema(), other.modified);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.created)) {
        this.created = data().deepCopy(fields()[9].schema(), other.created);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.numberlogins)) {
        this.numberlogins = data().deepCopy(fields()[10].schema(), other.numberlogins);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.uimode)) {
        this.uimode = data().deepCopy(fields()[11].schema(), other.uimode);
        fieldSetFlags()[11] = true;
      }
    }
    
    /** Creates a Builder by copying an existing G_User instance */
    private Builder(graphene.model.idl.G_User other) {
            super(graphene.model.idl.G_User.SCHEMA$);
      if (isValidValue(fields()[0], other.active)) {
        this.active = data().deepCopy(fields()[0].schema(), other.active);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.username)) {
        this.username = data().deepCopy(fields()[2].schema(), other.username);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.avatar)) {
        this.avatar = data().deepCopy(fields()[3].schema(), other.avatar);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.email)) {
        this.email = data().deepCopy(fields()[4].schema(), other.email);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.fullname)) {
        this.fullname = data().deepCopy(fields()[5].schema(), other.fullname);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.hashedpassword)) {
        this.hashedpassword = data().deepCopy(fields()[6].schema(), other.hashedpassword);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.lastlogin)) {
        this.lastlogin = data().deepCopy(fields()[7].schema(), other.lastlogin);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.modified)) {
        this.modified = data().deepCopy(fields()[8].schema(), other.modified);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.created)) {
        this.created = data().deepCopy(fields()[9].schema(), other.created);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.numberlogins)) {
        this.numberlogins = data().deepCopy(fields()[10].schema(), other.numberlogins);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.uimode)) {
        this.uimode = data().deepCopy(fields()[11].schema(), other.uimode);
        fieldSetFlags()[11] = true;
      }
    }

    /** Gets the value of the 'active' field */
    public java.lang.Boolean getActive() {
      return active;
    }
    
    /** Sets the value of the 'active' field */
    public graphene.model.idl.G_User.Builder setActive(boolean value) {
      validate(fields()[0], value);
      this.active = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'active' field has been set */
    public boolean hasActive() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'active' field */
    public graphene.model.idl.G_User.Builder clearActive() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'id' field */
    public java.lang.String getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public graphene.model.idl.G_User.Builder setId(java.lang.String value) {
      validate(fields()[1], value);
      this.id = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'id' field */
    public graphene.model.idl.G_User.Builder clearId() {
      id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'username' field */
    public java.lang.String getUsername() {
      return username;
    }
    
    /** Sets the value of the 'username' field */
    public graphene.model.idl.G_User.Builder setUsername(java.lang.String value) {
      validate(fields()[2], value);
      this.username = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'username' field has been set */
    public boolean hasUsername() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'username' field */
    public graphene.model.idl.G_User.Builder clearUsername() {
      username = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'avatar' field */
    public java.lang.String getAvatar() {
      return avatar;
    }
    
    /** Sets the value of the 'avatar' field */
    public graphene.model.idl.G_User.Builder setAvatar(java.lang.String value) {
      validate(fields()[3], value);
      this.avatar = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'avatar' field has been set */
    public boolean hasAvatar() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'avatar' field */
    public graphene.model.idl.G_User.Builder clearAvatar() {
      avatar = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'email' field */
    public java.lang.String getEmail() {
      return email;
    }
    
    /** Sets the value of the 'email' field */
    public graphene.model.idl.G_User.Builder setEmail(java.lang.String value) {
      validate(fields()[4], value);
      this.email = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'email' field has been set */
    public boolean hasEmail() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'email' field */
    public graphene.model.idl.G_User.Builder clearEmail() {
      email = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'fullname' field */
    public java.lang.String getFullname() {
      return fullname;
    }
    
    /** Sets the value of the 'fullname' field */
    public graphene.model.idl.G_User.Builder setFullname(java.lang.String value) {
      validate(fields()[5], value);
      this.fullname = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'fullname' field has been set */
    public boolean hasFullname() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'fullname' field */
    public graphene.model.idl.G_User.Builder clearFullname() {
      fullname = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'hashedpassword' field */
    public java.lang.String getHashedpassword() {
      return hashedpassword;
    }
    
    /** Sets the value of the 'hashedpassword' field */
    public graphene.model.idl.G_User.Builder setHashedpassword(java.lang.String value) {
      validate(fields()[6], value);
      this.hashedpassword = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'hashedpassword' field has been set */
    public boolean hasHashedpassword() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'hashedpassword' field */
    public graphene.model.idl.G_User.Builder clearHashedpassword() {
      hashedpassword = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'lastlogin' field */
    public java.lang.Long getLastlogin() {
      return lastlogin;
    }
    
    /** Sets the value of the 'lastlogin' field */
    public graphene.model.idl.G_User.Builder setLastlogin(java.lang.Long value) {
      validate(fields()[7], value);
      this.lastlogin = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'lastlogin' field has been set */
    public boolean hasLastlogin() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'lastlogin' field */
    public graphene.model.idl.G_User.Builder clearLastlogin() {
      lastlogin = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'modified' field */
    public java.lang.Long getModified() {
      return modified;
    }
    
    /** Sets the value of the 'modified' field */
    public graphene.model.idl.G_User.Builder setModified(java.lang.Long value) {
      validate(fields()[8], value);
      this.modified = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'modified' field has been set */
    public boolean hasModified() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'modified' field */
    public graphene.model.idl.G_User.Builder clearModified() {
      modified = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'created' field */
    public java.lang.Long getCreated() {
      return created;
    }
    
    /** Sets the value of the 'created' field */
    public graphene.model.idl.G_User.Builder setCreated(java.lang.Long value) {
      validate(fields()[9], value);
      this.created = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'created' field has been set */
    public boolean hasCreated() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'created' field */
    public graphene.model.idl.G_User.Builder clearCreated() {
      created = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'numberlogins' field */
    public java.lang.Integer getNumberlogins() {
      return numberlogins;
    }
    
    /** Sets the value of the 'numberlogins' field */
    public graphene.model.idl.G_User.Builder setNumberlogins(int value) {
      validate(fields()[10], value);
      this.numberlogins = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'numberlogins' field has been set */
    public boolean hasNumberlogins() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'numberlogins' field */
    public graphene.model.idl.G_User.Builder clearNumberlogins() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'uimode' field */
    public graphene.model.idl.G_UserInterfaceMode getUimode() {
      return uimode;
    }
    
    /** Sets the value of the 'uimode' field */
    public graphene.model.idl.G_User.Builder setUimode(graphene.model.idl.G_UserInterfaceMode value) {
      validate(fields()[11], value);
      this.uimode = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'uimode' field has been set */
    public boolean hasUimode() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'uimode' field */
    public graphene.model.idl.G_User.Builder clearUimode() {
      uimode = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    @Override
    public G_User build() {
      try {
        G_User record = new G_User();
        record.active = fieldSetFlags()[0] ? this.active : (java.lang.Boolean) defaultValue(fields()[0]);
        record.id = fieldSetFlags()[1] ? this.id : (java.lang.String) defaultValue(fields()[1]);
        record.username = fieldSetFlags()[2] ? this.username : (java.lang.String) defaultValue(fields()[2]);
        record.avatar = fieldSetFlags()[3] ? this.avatar : (java.lang.String) defaultValue(fields()[3]);
        record.email = fieldSetFlags()[4] ? this.email : (java.lang.String) defaultValue(fields()[4]);
        record.fullname = fieldSetFlags()[5] ? this.fullname : (java.lang.String) defaultValue(fields()[5]);
        record.hashedpassword = fieldSetFlags()[6] ? this.hashedpassword : (java.lang.String) defaultValue(fields()[6]);
        record.lastlogin = fieldSetFlags()[7] ? this.lastlogin : (java.lang.Long) defaultValue(fields()[7]);
        record.modified = fieldSetFlags()[8] ? this.modified : (java.lang.Long) defaultValue(fields()[8]);
        record.created = fieldSetFlags()[9] ? this.created : (java.lang.Long) defaultValue(fields()[9]);
        record.numberlogins = fieldSetFlags()[10] ? this.numberlogins : (java.lang.Integer) defaultValue(fields()[10]);
        record.uimode = fieldSetFlags()[11] ? this.uimode : (graphene.model.idl.G_UserInterfaceMode) defaultValue(fields()[11]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
