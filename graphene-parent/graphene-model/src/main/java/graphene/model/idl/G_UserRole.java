/*
 *
 *  Licensed to the Apache Software Foundation (ASF) under one
 *  or more contributor license agreements.  See the NOTICE file
 *  distributed with this work for additional information
 *  regarding copyright ownership.  The ASF licenses this file
 *  to you under the Apache License, Version 2.0 (the
 *  "License"); you may not use this file except in compliance
 *  with the License.  You may obtain a copy of the License at
 *       http://www.apache.org/licenses/LICENSE-2.0
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */

/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package graphene.model.idl;  
@SuppressWarnings("all")
/** A record indicating a user belongs to a role */
@org.apache.avro.specific.AvroGenerated
public class G_UserRole extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"G_UserRole\",\"namespace\":\"graphene.model.idl\",\"doc\":\"A record indicating a user belongs to a role\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":null},{\"name\":\"roleId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"userId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"modified\",\"type\":\"long\",\"doc\":\"userrole's modified datetime\",\"default\":0}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   private java.lang.String id;
   private java.lang.String roleId;
   private java.lang.String userId;
  /** userrole's modified datetime */
   private long modified;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public G_UserRole() {}

  /**
   * All-args constructor.
   */
  public G_UserRole(java.lang.String id, java.lang.String roleId, java.lang.String userId, java.lang.Long modified) {
    this.id = id;
    this.roleId = roleId;
    this.userId = userId;
    this.modified = modified;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return roleId;
    case 2: return userId;
    case 3: return modified;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.String)value$; break;
    case 1: roleId = (java.lang.String)value$; break;
    case 2: userId = (java.lang.String)value$; break;
    case 3: modified = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.String value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'roleId' field.
   */
  public java.lang.String getRoleId() {
    return roleId;
  }

  /**
   * Sets the value of the 'roleId' field.
   * @param value the value to set.
   */
  public void setRoleId(java.lang.String value) {
    this.roleId = value;
  }

  /**
   * Gets the value of the 'userId' field.
   */
  public java.lang.String getUserId() {
    return userId;
  }

  /**
   * Sets the value of the 'userId' field.
   * @param value the value to set.
   */
  public void setUserId(java.lang.String value) {
    this.userId = value;
  }

  /**
   * Gets the value of the 'modified' field.
   * userrole's modified datetime   */
  public java.lang.Long getModified() {
    return modified;
  }

  /**
   * Sets the value of the 'modified' field.
   * userrole's modified datetime   * @param value the value to set.
   */
  public void setModified(java.lang.Long value) {
    this.modified = value;
  }

  /** Creates a new G_UserRole RecordBuilder */
  public static graphene.model.idl.G_UserRole.Builder newBuilder() {
    return new graphene.model.idl.G_UserRole.Builder();
  }
  
  /** Creates a new G_UserRole RecordBuilder by copying an existing Builder */
  public static graphene.model.idl.G_UserRole.Builder newBuilder(graphene.model.idl.G_UserRole.Builder other) {
    return new graphene.model.idl.G_UserRole.Builder(other);
  }
  
  /** Creates a new G_UserRole RecordBuilder by copying an existing G_UserRole instance */
  public static graphene.model.idl.G_UserRole.Builder newBuilder(graphene.model.idl.G_UserRole other) {
    return new graphene.model.idl.G_UserRole.Builder(other);
  }
  
  /**
   * RecordBuilder for G_UserRole instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<G_UserRole>
    implements org.apache.avro.data.RecordBuilder<G_UserRole> {

    private java.lang.String id;
    private java.lang.String roleId;
    private java.lang.String userId;
    private long modified;

    /** Creates a new Builder */
    private Builder() {
      super(graphene.model.idl.G_UserRole.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(graphene.model.idl.G_UserRole.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.roleId)) {
        this.roleId = data().deepCopy(fields()[1].schema(), other.roleId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.userId)) {
        this.userId = data().deepCopy(fields()[2].schema(), other.userId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.modified)) {
        this.modified = data().deepCopy(fields()[3].schema(), other.modified);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing G_UserRole instance */
    private Builder(graphene.model.idl.G_UserRole other) {
            super(graphene.model.idl.G_UserRole.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.roleId)) {
        this.roleId = data().deepCopy(fields()[1].schema(), other.roleId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.userId)) {
        this.userId = data().deepCopy(fields()[2].schema(), other.userId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.modified)) {
        this.modified = data().deepCopy(fields()[3].schema(), other.modified);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public java.lang.String getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public graphene.model.idl.G_UserRole.Builder setId(java.lang.String value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public graphene.model.idl.G_UserRole.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'roleId' field */
    public java.lang.String getRoleId() {
      return roleId;
    }
    
    /** Sets the value of the 'roleId' field */
    public graphene.model.idl.G_UserRole.Builder setRoleId(java.lang.String value) {
      validate(fields()[1], value);
      this.roleId = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'roleId' field has been set */
    public boolean hasRoleId() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'roleId' field */
    public graphene.model.idl.G_UserRole.Builder clearRoleId() {
      roleId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'userId' field */
    public java.lang.String getUserId() {
      return userId;
    }
    
    /** Sets the value of the 'userId' field */
    public graphene.model.idl.G_UserRole.Builder setUserId(java.lang.String value) {
      validate(fields()[2], value);
      this.userId = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'userId' field has been set */
    public boolean hasUserId() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'userId' field */
    public graphene.model.idl.G_UserRole.Builder clearUserId() {
      userId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'modified' field */
    public java.lang.Long getModified() {
      return modified;
    }
    
    /** Sets the value of the 'modified' field */
    public graphene.model.idl.G_UserRole.Builder setModified(long value) {
      validate(fields()[3], value);
      this.modified = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'modified' field has been set */
    public boolean hasModified() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'modified' field */
    public graphene.model.idl.G_UserRole.Builder clearModified() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public G_UserRole build() {
      try {
        G_UserRole record = new G_UserRole();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.String) defaultValue(fields()[0]);
        record.roleId = fieldSetFlags()[1] ? this.roleId : (java.lang.String) defaultValue(fields()[1]);
        record.userId = fieldSetFlags()[2] ? this.userId : (java.lang.String) defaultValue(fields()[2]);
        record.modified = fieldSetFlags()[3] ? this.modified : (java.lang.Long) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
