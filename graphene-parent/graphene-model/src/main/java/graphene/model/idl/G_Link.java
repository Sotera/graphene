/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package graphene.model.idl;  
@SuppressWarnings("all")
/** * The links in the social, financial, communications or other graphs. May represent communication events, financial transactions
	 * or social connections. */
@org.apache.avro.specific.AvroGenerated
public class G_Link extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"G_Link\",\"namespace\":\"graphene.model.idl\",\"doc\":\"* The links in the social, financial, communications or other graphs. May represent communication events, financial transactions\\n\\t * or social connections.\",\"fields\":[{\"name\":\"tags\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"enum\",\"name\":\"G_LinkTag\",\"doc\":\"This is the current list of tags for Links:\",\"symbols\":[\"FINANCIAL\",\"SOCIAL\",\"COMMUNICATION\",\"OTHER\"]}},\"doc\":\"Link Tags (see above, e.g. \\\"FINANCIAL\\\")\"},{\"name\":\"source\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"source entity uid\",\"default\":null},{\"name\":\"target\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"target entity uid\",\"default\":null},{\"name\":\"directed\",\"type\":\"boolean\",\"doc\":\"true if directed, false if undirected\",\"default\":true},{\"name\":\"provenance\",\"type\":[{\"type\":\"record\",\"name\":\"G_Provenance\",\"doc\":\"This is a placeholder for future modeling of provenance. It is not a required field in any service calls.\",\"fields\":[{\"name\":\"uri\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Placeholder for now. Express provenance as a single URI.\"}]},\"null\"],\"default\":null},{\"name\":\"uncertainty\",\"type\":[{\"type\":\"record\",\"name\":\"G_Uncertainty\",\"doc\":\"This is a placeholder for future modeling of uncertainty. It is not a required field in any service calls.\\n\\t\\n\\tCHANGED IN 1.6\",\"fields\":[{\"name\":\"confidence\",\"type\":\"double\",\"doc\":\"Placeholder for now. Express original source confidence as a single number from 0 to 1.\",\"default\":1},{\"name\":\"currency\",\"type\":\"double\",\"doc\":\"Placeholder for now. Express confidence in currency of data as a single number from 0 to 1.\",\"default\":1}]},\"null\"],\"default\":null},{\"name\":\"properties\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"record\",\"name\":\"G_Property\",\"doc\":\"Each property on an Entity or Link is a name-value pair, with data type information, as well as optional\\n\\t provenance. Tags provide a way for the data provider to associate semantic annotations to each property\\n\\t in terms of the semantics of the application.  \\n\\t \\n\\t CHANGED IN 1.6\",\"fields\":[{\"name\":\"key\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"the field name in the underlying data source\"},{\"name\":\"friendlyText\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"user-friendly short-text for key (displayable)\",\"default\":null},{\"name\":\"styleType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"singletonRange\",\"type\":{\"type\":\"record\",\"name\":\"G_SingletonRange\",\"doc\":\"Single value\\n\\t\\n\\tADDED IN 1.5\",\"fields\":[{\"name\":\"value\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"int\",\"float\",\"double\",\"long\",\"boolean\",{\"type\":\"record\",\"name\":\"G_GeoData\",\"doc\":\"Structured representation of geo-spatial data.\",\"fields\":[{\"name\":\"text\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"an address or other place reference; unstructured text field\",\"default\":null},{\"name\":\"lat\",\"type\":[\"double\",\"null\"],\"doc\":\"latitude\",\"default\":null},{\"name\":\"lon\",\"type\":[\"double\",\"null\"],\"doc\":\"longitude\",\"default\":null},{\"name\":\"cc\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"ISO 3 digit country code\",\"default\":null}]}]},{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"G_PropertyType\",\"doc\":\"Allowed types for Property values.\\n\\n\\t CHANGED in 1.5\",\"symbols\":[\"DOUBLE\",\"LONG\",\"BOOLEAN\",\"STRING\",\"DATE\",\"GEO\",\"OTHER\"]},\"doc\":\"One of DOUBLE, LONG, BOOLEAN, STRING, DATE, GEO, OTHER\"}]},\"doc\":\"range of values\",\"default\":null},{\"name\":\"listRange\",\"type\":{\"type\":\"record\",\"name\":\"G_ListRange\",\"doc\":\"List of values\\n\\t\\n\\tADDED IN 1.5\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"int\",\"float\",\"double\",\"long\",\"boolean\",\"G_GeoData\"]}},{\"name\":\"type\",\"type\":\"G_PropertyType\",\"doc\":\"One of DOUBLE, LONG, BOOLEAN, STRING, DATE, GEO, OTHER\"}]},\"default\":null},{\"name\":\"boundedRange\",\"type\":{\"type\":\"record\",\"name\":\"G_BoundedRange\",\"doc\":\"Bounded or unbounded range values\\n\\t\\n\\tADDED IN 1.5\",\"fields\":[{\"name\":\"start\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"int\",\"float\",\"double\",\"long\",\"boolean\",\"G_GeoData\",\"null\"],\"doc\":\"start of range, or null if unbounded start\"},{\"name\":\"end\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"int\",\"float\",\"double\",\"long\",\"boolean\",\"G_GeoData\",\"null\"],\"doc\":\"end of range, or null if unbounded start\"},{\"name\":\"inclusive\",\"type\":\"boolean\",\"doc\":\"If true, range includes specified endpoint. If false, range is exclusive.\"},{\"name\":\"type\",\"type\":\"G_PropertyType\",\"doc\":\"One of DOUBLE, LONG, BOOLEAN, STRING, DATE, GEO, OTHER\"}]},\"default\":null},{\"name\":\"distributionRange\",\"type\":{\"type\":\"record\",\"name\":\"G_DistributionRange\",\"doc\":\"Describes a distribution of values. \\n\\t \\n\\tADDED IN 1.6\",\"fields\":[{\"name\":\"distribution\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"G_Frequency\",\"doc\":\"A frequency or probability element of a distribution.\\n\\t \\n\\tADDED IN 1.6\",\"fields\":[{\"name\":\"range\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"int\",\"float\",\"double\",\"long\",\"boolean\",\"G_GeoData\",\"G_ListRange\",\"G_BoundedRange\"],\"doc\":\"the value range which occurs with some specified frequency\"},{\"name\":\"frequency\",\"type\":\"double\",\"doc\":\"frequency as a count, or probability as a value from 0-1.\"}]}}},{\"name\":\"rangeType\",\"type\":{\"type\":\"enum\",\"name\":\"G_RangeType\",\"doc\":\"Allowed types for Ranges of values.\\n\\t\\n\\tCHANGED IN 1.6\",\"symbols\":[\"SINGLETON\",\"LIST\",\"BOUNDED\",\"DISTRIBUTION\"]},\"doc\":\"Describes how the values in the distribution are summarised\"},{\"name\":\"type\",\"type\":\"G_PropertyType\",\"doc\":\"The type of value that the distribution describes. One of DOUBLE, LONG, BOOLEAN, STRING, DATE, GEO, OTHER\"},{\"name\":\"isProbability\",\"type\":\"boolean\",\"doc\":\"True if a probability distribution, false if a frequency distribution\",\"default\":false}]},\"default\":null},{\"name\":\"provenance\",\"type\":[\"G_Provenance\",\"null\"],\"default\":null},{\"name\":\"uncertainty\",\"type\":[\"G_Uncertainty\",\"null\"],\"default\":null},{\"name\":\"tags\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"enum\",\"name\":\"G_PropertyTag\",\"doc\":\"Tags are defined by the application layer as a taxonomy of user and application concepts,\\n\\t independent of the data sources. This allows application semantics to be re-used with new\\n\\t data, with a minimum of new software design and development. Data layer entity types, link\\n\\t types and properties should be mapped into the list of tags. The application layer must be\\n\\t able to search by native field name or by tag interchangeably, and properties returned must\\n\\t contain both native field names as well as tags.\\n\\t \\n\\t The list of tags may change as application features evolve, though that will require\\n\\t collaboration with the data layer providers. Evolving the tag list should not change the\\n\\t Data Access or Search APIs.\\n\\n\\t This is the current list of tags for Properties:\\n\\t \\n\\t CHANGED in 1.5:\\n\\t   - CREDIT/DEBIT changed to INFLOWING/OUTFLOWING\\n\\t   - added USD\\n\\t   - added DURATION\\n\\t   \\n\\t CHANGED in 1.6:\\n\\t   - added ENTITY_TYPE\\n\\t   - added ACCOUNT_OWNER, CLUSTER_SUMMARY, COUNTRY_CODE\\n\\t   \\n\\t CHANGED in 1.7:\\n\\t   - added CLUSTER\",\"symbols\":[\"ID\",\"TYPE\",\"ENTITY_TYPE\",\"ACCOUNT_OWNER\",\"CLUSTER_SUMMARY\",\"CLUSTER\",\"NAME\",\"LABEL\",\"STAT\",\"TEXT\",\"STATUS\",\"ANNOTATION\",\"WARNING\",\"LINKED_DATA\",\"IMAGE\",\"GEO\",\"COUNTRY_CODE\",\"DATE\",\"AMOUNT\",\"INFLOWING\",\"OUTFLOWING\",\"COUNT\",\"SERIES\",\"CONSTRUCTED\",\"RAW\",\"USD\",\"DURATION\"]}},\"doc\":\"one or more tags from the Tag list, used to map this source-specific field into the semantics of applications\"}]},\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Link Tags (see above, e.g. "FINANCIAL") */
   private java.util.List<graphene.model.idl.G_LinkTag> tags;
  /** source entity uid */
   private java.lang.String source;
  /** target entity uid */
   private java.lang.String target;
  /** true if directed, false if undirected */
   private boolean directed;
   private graphene.model.idl.G_Provenance provenance;
   private graphene.model.idl.G_Uncertainty uncertainty;
   private java.util.Map<java.lang.String,graphene.model.idl.G_Property> properties;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public G_Link() {}

  /**
   * All-args constructor.
   */
  public G_Link(java.util.List<graphene.model.idl.G_LinkTag> tags, java.lang.String source, java.lang.String target, java.lang.Boolean directed, graphene.model.idl.G_Provenance provenance, graphene.model.idl.G_Uncertainty uncertainty, java.util.Map<java.lang.String,graphene.model.idl.G_Property> properties) {
    this.tags = tags;
    this.source = source;
    this.target = target;
    this.directed = directed;
    this.provenance = provenance;
    this.uncertainty = uncertainty;
    this.properties = properties;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return tags;
    case 1: return source;
    case 2: return target;
    case 3: return directed;
    case 4: return provenance;
    case 5: return uncertainty;
    case 6: return properties;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: tags = (java.util.List<graphene.model.idl.G_LinkTag>)value$; break;
    case 1: source = (java.lang.String)value$; break;
    case 2: target = (java.lang.String)value$; break;
    case 3: directed = (java.lang.Boolean)value$; break;
    case 4: provenance = (graphene.model.idl.G_Provenance)value$; break;
    case 5: uncertainty = (graphene.model.idl.G_Uncertainty)value$; break;
    case 6: properties = (java.util.Map<java.lang.String,graphene.model.idl.G_Property>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'tags' field.
   * Link Tags (see above, e.g. "FINANCIAL")   */
  public java.util.List<graphene.model.idl.G_LinkTag> getTags() {
    return tags;
  }

  /**
   * Sets the value of the 'tags' field.
   * Link Tags (see above, e.g. "FINANCIAL")   * @param value the value to set.
   */
  public void setTags(java.util.List<graphene.model.idl.G_LinkTag> value) {
    this.tags = value;
  }

  /**
   * Gets the value of the 'source' field.
   * source entity uid   */
  public java.lang.String getSource() {
    return source;
  }

  /**
   * Sets the value of the 'source' field.
   * source entity uid   * @param value the value to set.
   */
  public void setSource(java.lang.String value) {
    this.source = value;
  }

  /**
   * Gets the value of the 'target' field.
   * target entity uid   */
  public java.lang.String getTarget() {
    return target;
  }

  /**
   * Sets the value of the 'target' field.
   * target entity uid   * @param value the value to set.
   */
  public void setTarget(java.lang.String value) {
    this.target = value;
  }

  /**
   * Gets the value of the 'directed' field.
   * true if directed, false if undirected   */
  public java.lang.Boolean getDirected() {
    return directed;
  }

  /**
   * Sets the value of the 'directed' field.
   * true if directed, false if undirected   * @param value the value to set.
   */
  public void setDirected(java.lang.Boolean value) {
    this.directed = value;
  }

  /**
   * Gets the value of the 'provenance' field.
   */
  public graphene.model.idl.G_Provenance getProvenance() {
    return provenance;
  }

  /**
   * Sets the value of the 'provenance' field.
   * @param value the value to set.
   */
  public void setProvenance(graphene.model.idl.G_Provenance value) {
    this.provenance = value;
  }

  /**
   * Gets the value of the 'uncertainty' field.
   */
  public graphene.model.idl.G_Uncertainty getUncertainty() {
    return uncertainty;
  }

  /**
   * Sets the value of the 'uncertainty' field.
   * @param value the value to set.
   */
  public void setUncertainty(graphene.model.idl.G_Uncertainty value) {
    this.uncertainty = value;
  }

  /**
   * Gets the value of the 'properties' field.
   */
  public java.util.Map<java.lang.String,graphene.model.idl.G_Property> getProperties() {
    return properties;
  }

  /**
   * Sets the value of the 'properties' field.
   * @param value the value to set.
   */
  public void setProperties(java.util.Map<java.lang.String,graphene.model.idl.G_Property> value) {
    this.properties = value;
  }

  /** Creates a new G_Link RecordBuilder */
  public static graphene.model.idl.G_Link.Builder newBuilder() {
    return new graphene.model.idl.G_Link.Builder();
  }
  
  /** Creates a new G_Link RecordBuilder by copying an existing Builder */
  public static graphene.model.idl.G_Link.Builder newBuilder(graphene.model.idl.G_Link.Builder other) {
    return new graphene.model.idl.G_Link.Builder(other);
  }
  
  /** Creates a new G_Link RecordBuilder by copying an existing G_Link instance */
  public static graphene.model.idl.G_Link.Builder newBuilder(graphene.model.idl.G_Link other) {
    return new graphene.model.idl.G_Link.Builder(other);
  }
  
  /**
   * RecordBuilder for G_Link instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<G_Link>
    implements org.apache.avro.data.RecordBuilder<G_Link> {

    private java.util.List<graphene.model.idl.G_LinkTag> tags;
    private java.lang.String source;
    private java.lang.String target;
    private boolean directed;
    private graphene.model.idl.G_Provenance provenance;
    private graphene.model.idl.G_Uncertainty uncertainty;
    private java.util.Map<java.lang.String,graphene.model.idl.G_Property> properties;

    /** Creates a new Builder */
    private Builder() {
      super(graphene.model.idl.G_Link.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(graphene.model.idl.G_Link.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.tags)) {
        this.tags = data().deepCopy(fields()[0].schema(), other.tags);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.source)) {
        this.source = data().deepCopy(fields()[1].schema(), other.source);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.target)) {
        this.target = data().deepCopy(fields()[2].schema(), other.target);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.directed)) {
        this.directed = data().deepCopy(fields()[3].schema(), other.directed);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.provenance)) {
        this.provenance = data().deepCopy(fields()[4].schema(), other.provenance);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.uncertainty)) {
        this.uncertainty = data().deepCopy(fields()[5].schema(), other.uncertainty);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.properties)) {
        this.properties = data().deepCopy(fields()[6].schema(), other.properties);
        fieldSetFlags()[6] = true;
      }
    }
    
    /** Creates a Builder by copying an existing G_Link instance */
    private Builder(graphene.model.idl.G_Link other) {
            super(graphene.model.idl.G_Link.SCHEMA$);
      if (isValidValue(fields()[0], other.tags)) {
        this.tags = data().deepCopy(fields()[0].schema(), other.tags);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.source)) {
        this.source = data().deepCopy(fields()[1].schema(), other.source);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.target)) {
        this.target = data().deepCopy(fields()[2].schema(), other.target);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.directed)) {
        this.directed = data().deepCopy(fields()[3].schema(), other.directed);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.provenance)) {
        this.provenance = data().deepCopy(fields()[4].schema(), other.provenance);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.uncertainty)) {
        this.uncertainty = data().deepCopy(fields()[5].schema(), other.uncertainty);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.properties)) {
        this.properties = data().deepCopy(fields()[6].schema(), other.properties);
        fieldSetFlags()[6] = true;
      }
    }

    /** Gets the value of the 'tags' field */
    public java.util.List<graphene.model.idl.G_LinkTag> getTags() {
      return tags;
    }
    
    /** Sets the value of the 'tags' field */
    public graphene.model.idl.G_Link.Builder setTags(java.util.List<graphene.model.idl.G_LinkTag> value) {
      validate(fields()[0], value);
      this.tags = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'tags' field has been set */
    public boolean hasTags() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'tags' field */
    public graphene.model.idl.G_Link.Builder clearTags() {
      tags = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'source' field */
    public java.lang.String getSource() {
      return source;
    }
    
    /** Sets the value of the 'source' field */
    public graphene.model.idl.G_Link.Builder setSource(java.lang.String value) {
      validate(fields()[1], value);
      this.source = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'source' field has been set */
    public boolean hasSource() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'source' field */
    public graphene.model.idl.G_Link.Builder clearSource() {
      source = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'target' field */
    public java.lang.String getTarget() {
      return target;
    }
    
    /** Sets the value of the 'target' field */
    public graphene.model.idl.G_Link.Builder setTarget(java.lang.String value) {
      validate(fields()[2], value);
      this.target = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'target' field has been set */
    public boolean hasTarget() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'target' field */
    public graphene.model.idl.G_Link.Builder clearTarget() {
      target = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'directed' field */
    public java.lang.Boolean getDirected() {
      return directed;
    }
    
    /** Sets the value of the 'directed' field */
    public graphene.model.idl.G_Link.Builder setDirected(boolean value) {
      validate(fields()[3], value);
      this.directed = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'directed' field has been set */
    public boolean hasDirected() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'directed' field */
    public graphene.model.idl.G_Link.Builder clearDirected() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'provenance' field */
    public graphene.model.idl.G_Provenance getProvenance() {
      return provenance;
    }
    
    /** Sets the value of the 'provenance' field */
    public graphene.model.idl.G_Link.Builder setProvenance(graphene.model.idl.G_Provenance value) {
      validate(fields()[4], value);
      this.provenance = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'provenance' field has been set */
    public boolean hasProvenance() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'provenance' field */
    public graphene.model.idl.G_Link.Builder clearProvenance() {
      provenance = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'uncertainty' field */
    public graphene.model.idl.G_Uncertainty getUncertainty() {
      return uncertainty;
    }
    
    /** Sets the value of the 'uncertainty' field */
    public graphene.model.idl.G_Link.Builder setUncertainty(graphene.model.idl.G_Uncertainty value) {
      validate(fields()[5], value);
      this.uncertainty = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'uncertainty' field has been set */
    public boolean hasUncertainty() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'uncertainty' field */
    public graphene.model.idl.G_Link.Builder clearUncertainty() {
      uncertainty = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'properties' field */
    public java.util.Map<java.lang.String,graphene.model.idl.G_Property> getProperties() {
      return properties;
    }
    
    /** Sets the value of the 'properties' field */
    public graphene.model.idl.G_Link.Builder setProperties(java.util.Map<java.lang.String,graphene.model.idl.G_Property> value) {
      validate(fields()[6], value);
      this.properties = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'properties' field has been set */
    public boolean hasProperties() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'properties' field */
    public graphene.model.idl.G_Link.Builder clearProperties() {
      properties = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public G_Link build() {
      try {
        G_Link record = new G_Link();
        record.tags = fieldSetFlags()[0] ? this.tags : (java.util.List<graphene.model.idl.G_LinkTag>) defaultValue(fields()[0]);
        record.source = fieldSetFlags()[1] ? this.source : (java.lang.String) defaultValue(fields()[1]);
        record.target = fieldSetFlags()[2] ? this.target : (java.lang.String) defaultValue(fields()[2]);
        record.directed = fieldSetFlags()[3] ? this.directed : (java.lang.Boolean) defaultValue(fields()[3]);
        record.provenance = fieldSetFlags()[4] ? this.provenance : (graphene.model.idl.G_Provenance) defaultValue(fields()[4]);
        record.uncertainty = fieldSetFlags()[5] ? this.uncertainty : (graphene.model.idl.G_Uncertainty) defaultValue(fields()[5]);
        record.properties = fieldSetFlags()[6] ? this.properties : (java.util.Map<java.lang.String,graphene.model.idl.G_Property>) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
