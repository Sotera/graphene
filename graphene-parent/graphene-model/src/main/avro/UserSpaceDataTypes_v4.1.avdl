@namespace("graphene.model.idl")
/**
*/
protocol G_UserSpaceDataTypes {
	import idl "DataTypes_v1.8.avdl";
	import idl "CommonDataTypes_v4.1.avdl";
	import idl "SecurityDataTypes_v4.1.avdl";
	import idl "Search_v1.8.avdl";
	import idl "EntitySearch_v1.8.avdl";
	
	enum G_WorkspaceFields {
		active,json,queries, datamap,description,title,id,modified,created
	}
	
	enum G_UserSpaceRelationshipType {
		CREATOR_OF, // For user to workspace relations
		EDITOR_OF, // For user to workspace relations
		REVIEWER_OF // For user to workspace relations
	}
	enum G_UserFields {
		id,active,username,avatar,email,fullname,hashedpassword,lastlogin,modified,created,numberlogins
	}
	
	enum G_UserInterfaceMode {
		DOMAIN_EXPERT, 		 	// A more simplified UI, use smart defaults and hide advanced features.
		TECHNICAL_EXPERT		 	// Show advanced buttons and features.
	}
	enum G_GroupFields {
		id,name,description
	}
	
	record G_User {
		/** */
		boolean active = true;
		string id;
		union {string, null} username = "notset";
		/**
		 * some id of an avatar (could be a file name or other string to look
		 * up)
		 */
		union {string, null} avatar = null;
		
		/** user's email */
		union {string, null} email = null;
		
		/** user's full name */
		union {string, null} fullname = null;
		
		/** user's hashed password */
		union {string, null} hashedpassword = null;
		
		/** user's lastlogin datetime */
		union { long, null} lastlogin = 0;
		
		/** user's modified datetime */
		union { long, null} modified = 0;
		
		/** user's account created datetime */
		union { long, null} created = 0;
		
		/** user's numberlogins */
		int numberlogins = 0;
		
		/** user's last selected uimode */
		G_UserInterfaceMode uimode;
		
	
	}
	
	record G_Group {
		string id =null;
		union {string, null}  name = "notset";
		union {string, null}  description = "notset";
		/** groups's modified datetime */
		long modified = 0;
	}
	
	record G_ReportViewEvent {
		string id =null;
		string reportId;
		string reportType;
		string reportPageLink;
		long timeInitiated;
		union {string, null}  userId = "None";
		union {string, null}  userName = "None";
	}
	
	record G_ExportEvent {
		string id =null;
		string reportId;
		string reportType;
		string exportFormat="Unknown";
		long numberOfElements=0;
		long timeInitiated;
		union {string, null}  userId = "None";
		union {string, null}  userName = "None";
	}
	
	
	record G_UserLoginEvent {
		string id =null;
		long timeInitiated;
		union {string, null}  userId = "None";
		union {string, null}  userName = "None";
	}
	
	record G_GraphViewEvent {
		string id =null;
		string reportId;
		string reportType;
		string reportPageLink;
		long timeInitiated;
		union {string, null}  userId = "None";
		union {string, null}  userName = "None";
		union {@java-class("mil.darpa.vande.generic.V_GraphQuery") string,null} queryObject;
	}
			
	record G_EntityQueryEvent {
		G_EntityQuery q = null;
		long numResults;
	}
	
	record G_Workspace {
		boolean active =true;
		union {string, null} description=null;
		union {string, null} reports=null;
		string title="untitled";
		array<G_ReportViewEvent> savedReports;
		array<G_EntityQuery> queryObjects;
		string id =null;
			
		 /** workspace's modified datetime */
		long modified = 0;
		 /** workspace's created datetime */
		long created = 0;
			
	}
	
	/** A record indicating a user belongs to a group */
	record G_UserGroup {
		string id =null;
		string  groupId =null;
		string  userId =null;
		/** usergroups's modified datetime */
		long modified = 0;
	}
		/** A record indicating a user belongs to a role */
	record G_UserRole {
		string id =null;
		string roleId;
		string userId;
		/** userrole's modified datetime */
		long modified = 0;
	}
	
	/** A record indicating a user has access to a workspace */
	record G_UserWorkspace {
		string id =null;
		string  workspaceId =null;
		string  userId =null;
		/** userworkspace's modified datetime */
		long modified = 0;
		G_UserSpaceRelationshipType role;
	}
	
}
